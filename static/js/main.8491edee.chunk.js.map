{"version":3,"sources":["chart.js","db_api.js","assets/body_app.db","assets/fitbit.db","App.js","index.js"],"names":["c3","require","date_ticks","m","m_str","String","padStart","push","create_chart_fitbit","id","table","generate","bindto","data","x","xFormat","columns","concat","names","y1","y2","axes","axis","type","min","at","max","tick","rotate","count","format","values","outer","y","s","Math","round","show","size","height","grid","sqlPromise","initSqlJs","locateFile","sqlWasm","load_table","filename","sql_statement","a","dataPromise","fetch","then","res","arrayBuffer","Promise","all","SQL","buf","query","Database","Uint8Array","exec","map","_","i","row","Array","length","keys","reduce","obj","Object","assign","Dropdown","items","value","setVal","options","item","onChange","useCallback","event","target","App","useState","labelMi","setLabelMi","labelFb","setLabelFb","chart","tb","dataMi","setDataMi","dataFb","setDataFb","useEffect","db_api","db_body_app","db_fitbit","tb_body","tb_run","chart_mi","point","r","chart_fb","c3_chart","load","className","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8491edee.chunk.js","sourcesContent":["\r\nconst c3 = require(\"c3\");\r\nrequire(\"c3/c3.min.css\")\r\n\r\nlet month_min = 1;\r\nlet month_max = 7;\r\n\r\nlet date_ticks = [];\r\n\r\nfor (let m = month_min; m < month_max; ++m) {\r\n    let m_str = String(m).padStart(2, '0');\r\n    date_ticks.push(`2022-${m_str}-01 00:00:00`);\r\n}\r\n\r\nexport function create_chart_miscale(id, table) {\r\n    return c3.generate({\r\n        bindto: id,\r\n        point: {\r\n            r: 2\r\n        },\r\n        data: {\r\n            x: 'x',\r\n            xFormat: '%Y-%m-%d %H:%M:%S',\r\n            columns: [\r\n                [\"x\"].concat(table[\"date\"]),\r\n                [\"y1\"].concat(table[\"weight_kg\"]),\r\n                [\"y2\"].concat(table[\"muscle\"])\r\n            ],\r\n            names: {\r\n                y1: 'weight',\r\n                y2: 'muscle',\r\n            },\r\n            axes: {\r\n                y1: 'y',\r\n                y2: 'y2'\r\n            }\r\n        },\r\n        axis: {\r\n            x: {\r\n                type: 'timeseries',\r\n                min: date_ticks.at(1),\r\n                max: date_ticks.at(-1),\r\n                tick: {\r\n                    rotate: 90,\r\n                    count: 10,\r\n                    format: '%m/%d',\r\n                    values: date_ticks,\r\n                    outer: false,\r\n                },\r\n            },\r\n            y2: {\r\n                show: true\r\n            }\r\n        },\r\n        size: {\r\n            height: 240,\r\n        },\r\n        grid: {\r\n            x: {\r\n                show: true\r\n            },\r\n            y: {\r\n                show: true\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\nexport function create_chart_fitbit(id, table) {\r\n    return c3.generate({\r\n        bindto: id,\r\n        data: {\r\n            x: 'x',\r\n            xFormat: '%Y-%m-%d %H:%M:%S',\r\n            columns: [\r\n                [\"x\"].concat(table[\"date\"]),\r\n                [\"y1\"].concat(table[\"pace\"]),\r\n                [\"y2\"].concat(table[\"distance\"])\r\n            ],\r\n            names: {\r\n                y1: 'pace',\r\n                y2: 'distance',\r\n            },\r\n            axes: {\r\n                y1: 'y',\r\n                y2: 'y2'\r\n            }\r\n        },\r\n        axis: {\r\n            x: {\r\n                type: 'timeseries',\r\n                min: date_ticks.at(0),\r\n                max: date_ticks.at(-1),\r\n                tick: {\r\n                    rotate: 90,\r\n                    count: 10,\r\n                    format: '%m/%d',\r\n                    values: date_ticks,\r\n                    outer: false,\r\n                },\r\n            },\r\n            y: {\r\n                tick: {\r\n                    format: s => (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + Math.round(s),\r\n                },\r\n                max: 60 * 7,\r\n                min: 60 * 4,\r\n            },\r\n            y2: {\r\n                show: true,\r\n            }\r\n        },\r\n        size: {\r\n            height: 240,\r\n        },\r\n        grid: {\r\n            x: {\r\n                show: true\r\n            },\r\n            y: {\r\n                show: true\r\n            }\r\n        },\r\n    });\r\n}","\r\nimport initSqlJs from \"sql.js\";\r\n\r\n// Required to let webpack 4 know it needs to copy the wasm file to our assets\r\nimport sqlWasm from \"!!file-loader?name=sql-wasm-[contenthash].wasm!sql.js/dist/sql-wasm.wasm\";\r\n\r\nconst sqlPromise = initSqlJs({ locateFile: () => sqlWasm });\r\n\r\nexport async function load_table(filename, sql_statement) {\r\n    const dataPromise = fetch(filename).then(res => res.arrayBuffer());\r\n    const [SQL, buf] = await Promise.all([sqlPromise, dataPromise])\r\n    let data = (() => {\r\n        const db = new SQL.Database(new Uint8Array(buf));\r\n        let query = db.exec(sql_statement)[0];\r\n        let columns = query[\"columns\"];\r\n        let values = query[\"values\"];\r\n        values = values[0].map((_, i) => values.map(row => row[i]));\r\n        return [...Array(values.length).keys()]\r\n            .reduce((obj, i) => Object.assign(\r\n                obj, { [columns[i]]: values[i] }), {}\r\n            )\r\n    })();\r\n    return data;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/body_app.d644a039.db\";","export default __webpack_public_path__ + \"static/media/fitbit.a27d7678.db\";","\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./styles.css\";\n\nimport * as c3_chart from \"./chart.js\";\nimport * as db_api from \"./db_api.js\";\n\nimport db_body_app from \"./assets/body_app.db\";\nimport db_fitbit from \"./assets/fitbit.db\";\n\nimport PropTypes from 'prop-types'\n\nfunction Dropdown({ items, value, setVal }) {\n  const options = items.map(item => <option key={item} value={item}>{item}</option>);\n  const onChange = useCallback((event) => {\n    setVal(event.target.value);\n  }, [setVal]);\n  return (\n    <select value={value} onChange={onChange}>\n      {options}\n    </select>\n  );\n}\n\nDropdown.propTypes = {\n  items: PropTypes.array,\n  value: PropTypes.string,\n  setVal: PropTypes.func,\n}\n\nexport default function App() {\n  const [labelMi, setLabelMi] = useState(\"muscle\");\n  const [labelFb, setLabelFb] = useState(\"distance\");\n  const [dataMi, setDataMi] = useState({ chart: null, tb: null });\n  const [dataFb, setDataFb] = useState({ chart: null, tb: null });\n\n  useEffect(() => {\n    (async () => {\n      const [tb_body, tb_run] = await Promise.all([\n        db_api.load_table(db_body_app, \"select * from tb_body order by date\"),\n        db_api.load_table(db_fitbit, \"select * from tb_running order by date\")\n      ]);\n      const chart_mi = c3_chart.create_chart_miscale(\"#chart-weight\", tb_body);\n      const chart_fb = c3_chart.create_chart_fitbit(\"#chart-pace-dist\", tb_run);\n\n      setDataMi({ chart: chart_mi, tb: tb_body });\n      setDataFb({ chart: chart_fb, tb: tb_run });\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (dataMi.chart != null) {\n      dataMi.chart.load({\n        columns: [\n          [\"y2\"].concat(dataMi.tb[labelMi])\n        ],\n        names: {\n          y2: labelMi,\n        }\n      });\n    }\n  }, [labelMi, dataMi]);\n\n  useEffect(() => {\n    if (dataFb.chart != null) {\n      dataFb.chart.load({\n        columns: [\n          [\"y2\"].concat(dataFb.tb[labelFb])\n        ],\n        names: {\n          y2: labelFb,\n        }\n      });\n    }\n  }, [labelFb, dataFb]);\n\n  const miscale_items = [\"bmi\", \"fat_per\", \"muscle\"];\n  const fitbit_items = [\"calories\", \"distance\", \"ave_heart_rate\", \"elevation_gain\"];\n  return (\n    <div className=\"App\">\n      <Dropdown items={miscale_items} value={labelMi} setVal={setLabelMi} />\n      <div id=\"chart-weight\" />\n      <Dropdown items={fitbit_items} value={labelFb} setVal={setLabelFb} />\n      <div id=\"chart-pace-dist\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}